import { Injectable } from '@angular/core';
import { Http, RequestOptions, RequestMethod, Headers } from '@angular/http';
import { HttpClient } from '@angular/common/http';
import { Users } from '../Models/users';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { Router } from '@angular/router';

@Injectable({
  providedIn: 'root'
})
export class LoginService {
  

  constructor(private http: Http, private httpClient: HttpClient,private router:Router) { }

  public UserList: Users[];
  public SelectedUser: Users;

  testvariable: object = {val1:'123'}



  getUsersList(): Observable<Users[]> {
    return this.httpClient.get<Users[]>('api/Users/GetUsers');
  }

  getAuthenticatedUser(EmailId:string,password): Observable<Users[]> {
    return this.httpClient.get<Users[]>('api/Users/getAutheticateduser/' + EmailId + '/' + password);
     
    }

  //getAuthenticatedUser(EmailId: string, password)  {
  //  return this.httpClient.get<Users[]>('api/Users/getAutheticateduser/' + EmailId + '/' + password)
  //    .pipe(map(
  //      data => { this.UserList = data 
  //     //  console.log(this.SelectedUser );
  //      return data;
  //      }
  //    ));

  //}

  //getAuthenticatedUser(Email: string, password: string) {
  //  return this.http.post(`/users/authenticate`, { Email: Email, password: password })
  //    .pipe(map(user => {
  //      // login successful if there's a jwt token in the response
  //      //if (user && user.token) {
  //      //  // store user details and jwt token in local storage to keep user logged in between page refreshes
  //      //  localStorage.setItem('currentUser', JSON.stringify(user));
  //      //}

  //      return user;
  //    }));
  //}

  //getAuthenticatedUser(EmailId: string) {

  ////  var body = JSON.stringify(IncidentModel);
  //  var hearderOptions = new Headers({ 'Content-Type': 'application/json' });
  //  var requestOptions = new RequestOptions({ method: RequestMethod.Get, headers: hearderOptions });
  //  return this.http.get('api/Users/getAutheticateduser/' + EmailId, requestOptions).pipe(map(res => res.json));
  //}




}
